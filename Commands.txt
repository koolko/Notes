Docker images:
    docker pull microsoft/dotnet
    docker pull nginx

Adding non-root user privilages:
    sudo groupadd docker
    sudo gpasswd -a $USER docker
    newgrp docker

Building mvc test project (in created directory):
    dotnet new mvc
    dotnet publish -c Release -o out

Sample Dockerfile:
    FROM microsoft/aspnetcore:2
    LABEL Name=dockertst Version=0.0.1 
    WORKDIR /app
    ENV ASPNETCORE_URLS http://*:3000
    EXPOSE 3000
    ENTRYPOINT dotnet DockerTst.dll
    COPY out .

Remove single image:
    docker rmi ###

Remove unused images:
    sudo docker rmi -f $(sudo docker images | grep "<none>" | awk "{print \$3}")

NGINX:
    sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /home/koolko/Projects/nginx/nginx.key -out /home/koolko/Projects/nginx/nginx.crt

    docker run -v /home/koolko/Projects/nginx/nginx.conf:/etc/nginx/nginx.conf:ro -v /home/koolko/Projects/nginx/nginx.crt:/etc/nginx/ssl/nginx.crt:ro -v /home/koolko/Projects/nginx/nginx.key:/etc/nginx/ssl/nginx.key:ro -d -p 80:80 -p 443:443 nginx:latest

Sample nginx.conf:
    user www-data;
    worker_processes auto;
    pid /run/nginx.pid;

    events {
	    worker_connections 768;
    }

    http {
	    # Basic Settings
	    sendfile on;
	    tcp_nopush on;
	    tcp_nodelay on;
	    keepalive_timeout 65;
	    types_hash_max_size 2048;

	    # SSL Settings
	    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	    ssl_prefer_server_ciphers on;

        upstream dockerapp {
            server 192.168.56.101:3000;
        }

    #    server {
    #        server_name     dockerapp;
    #        listen          80;
    #
    #        location / {
    #            proxy_pass http://dockerapp;
    #        }
    #
    #        location /docker {
    #            proxy_pass http://dockerapp/Home/About/;
    #        }
    #    }
        server {
            listen       80;
            server_name  dockerapp;
            rewrite ^ https://$http_host$request_uri? permanent;    # force redirect http to https

            server_tokens off;
        }

        server {
            listen              443 ssl;
            server_name         dockerapp;
            server_tokens off;
            ssl_certificate     /etc/nginx/ssl/nginx.crt;
            ssl_certificate_key /etc/nginx/ssl/nginx.key;
            
            location / {
                proxy_pass http://dockerapp;
            }

            location /docker {
                proxy_pass http://dockerapp/Home/About/;
            }
        }
    }
